apiVersion: apps/v1
kind: Deployment
metadata:
  name: authservice
  namespace: istio-system
  labels:
    app: authservice
spec:
  replicas: 1 # you can scale up productpage as long as session affinity is enabled via a DestinationRule (see ./config/bookinfo-gateway.yaml)
  selector:
    matchLabels:
      app: authservice
  template:
    metadata:
      labels:
        app: authservice
    spec:
      volumes:
        - name: config
          configMap:
            name: authservice-config
      containers:
      - name: authservice
        image: ghcr.io/istio-ecosystem/authservice/authservice:0.5.3
        imagePullPolicy: Always
        ports:
          - containerPort: 10003
        volumeMounts:
          - name: config
            mountPath: /etc/authservice
---
apiVersion: v1
kind: Service
metadata:
  name: authservice
  namespace: istio-system
  labels:
    app: authservice
spec:
  ports:
  - port: 10003
    name: grpc
  selector:
    app: authservice
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: authservice-config
  namespace: istio-system
data:
  config.json: |
    {
      "listen_address": "0.0.0.0",
      "listen_port": "10003",
      "log_level": "trace",
      "threads": 8,
      "allow_unmatched_requests": "false",
      "chains": [
        {
          "name": "idp_filter_chain",
          "match": {
            "header": ":authority",
            "prefix": "localhost",
          },
          "filters": [
          {
            "oidc":
              {
                "authorization_uri": "https://keycloak.local/realms/mlops/protocol/openid-connect/auth",
                "token_uri": "https://keycloak.local/realms/mlops/protocol/openid-connect/token",
                "callback_uri": "https://echoserver.local/oauth/callback",
                "jwks_fetcher": {
                  "jwks_uri": "https://keycloak.local/realms/mlops/protocol/openid-connect/certs",
                  "periodic_fetch_interval_sec": 10
                },
                "client_id": "istio-mlops",
                "client_secret": "saiUnEYhr5iYLGuAfbOMtBfHSEUYcjvE",
                "scopes": [],
                "cookie_name_prefix": "echoserver",
                "id_token": {
                  "preamble": "Bearer",
                  "header": "Authorization"
                },
                "logout": {
                  "path": "/authservice_logout",
                  "redirect_uri": "https://echoserver.local"
                }
              }
            }
          ]
        }
      ]
    }
